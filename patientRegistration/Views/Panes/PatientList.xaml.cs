using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Runtime.InteropServices.WindowsRuntime;
using System.Threading.Tasks;
using Microsoft.UI.Xaml;
using Microsoft.UI.Xaml.Controls;
using Microsoft.UI.Xaml.Controls.Primitives;
using Microsoft.UI.Xaml.Data;
using Microsoft.UI.Xaml.Input;
using Microsoft.UI.Xaml.Media;
using Microsoft.UI.Xaml.Navigation;
using Windows.Foundation;
using Windows.Foundation.Collections;
using static System.Runtime.InteropServices.JavaScript.JSType;

// To learn more about WinUI, the WinUI project structure,
// and more about our project templates, see: http://aka.ms/winui-project-info.

namespace patientRegistration.Views.Panes
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class PatientList : Page
    {
        

        // The ItemsSource for the ListView is generated by a method of the ExampleContact class called
        // GetContactsAsync().This method pulls data from an internal data source and creates
        // ExampleContact objects from that data. Those ExampleContact objects are placed in a collection
        // which is returned from the GetContactsAsync() function.


        public PatientList()
        {
            this.InitializeComponent();
            //BaseExample.ItemsSource = ExampleContact.GetContactsAsync();
            BaseExample.ItemsSource = new List<ExampleContact>
            { 
                new ExampleContact ("Justin", "Wang", "None"),
                new ExampleContact ("Justin", "Wang 2", "PHHS"),
                new ExampleContact ("Alexander", "B. M. Zhang", "Amazon")
            };

        }
    }

    // The data template is defined to display a ExampleContact object (class definition shown below), and the text
    // displayed is bound to the ExampleContact object's Name attribute.

    public class ExampleContact
    {
        public string FirstName { get; set; } = string.Empty;
        public string LastName { get; set; } = string.Empty;
        public string Company { get; set; } = string.Empty;
        public string Name => FirstName + " " + LastName;

        public ExampleContact()
        {

        }

        public ExampleContact(string firstName, string lastName, string company)
        {
            FirstName = firstName;
            LastName = lastName;
            Company = company;
        }

        public static async Task<IList<ExampleContact>> GetContactsAsync()
        {
            await Task.Delay(100);
            
            List<ExampleContact> li = new List<ExampleContact>();
            li.Add(new ExampleContact("Justin", "Wang", "None"));
            li.Add(new ExampleContact("Justin", "Wang 2", "School"));
            return li;

        }

        public static List<ExampleContact> GetContacts()
        {
            List<ExampleContact> li = new List<ExampleContact>();
            li.Add(new ExampleContact("Justin", "Wang", "None"));
            li.Add(new ExampleContact("Justin", "Wang 2", "School"));
            return li;

        }

        //public override string ToString()
        //{
        //    return $"{FirstName} {LastName}";
        //}
    }
}
